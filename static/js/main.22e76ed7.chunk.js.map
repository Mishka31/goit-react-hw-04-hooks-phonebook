{"version":3,"sources":["hooks/useLocalStorage.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","App.module.css"],"names":["useLocalStorage","key","defaultValue","useState","JSON","parse","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","listArrey","name","setName","number","setNumber","handleChange","event","target","inputName","value","reset","className","s","container","imputAndButton","e","preventDefault","map","c","toLowerCase","includes","alert","autoComplete","type","imput","onChange","pattern","title","required","button","ContactList","contacts","onDelete","section","contact","li","href","id","onClick","Find","onSearch","App","setContacts","filter","setfilter","lowerFilter","filteredContacts","titleH1","data","uuidv4","titleH2","Filter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.22e76ed7.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => JSON.parse(localStorage.getItem(key)) ?? defaultValue);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ onSubmit, listArrey }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const hendkeSubmit = (e) => {\r\n    e.preventDefault();\r\n    const nameFromArrey = listArrey.map((c) => c.name.toLowerCase());\r\n    if (nameFromArrey.includes(name.toLowerCase())) {\r\n      reset();\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name: inputName, value } = event.target;\r\n\r\n    if (inputName === \"name\") {\r\n      setName(value);\r\n    } else if (inputName === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  return (\r\n    <div className={s.container}>\r\n      <form className={s.imputAndButton} onSubmit={hendkeSubmit} autoComplete=\"off\">\r\n        <label>\r\n          <p className={s.name}>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            className={s.imput}\r\n            onChange={handleChange}\r\n            value={name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className={s.name}>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            className={s.imput}\r\n            onChange={handleChange}\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <ul>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <li key={contact.id} className={s.li}>\r\n              <span className={s.name}>{contact.name}:</span>{\" \"}\r\n              <a className={s.number} href=\"tel:{contact.number}\">\r\n                {contact.number}\r\n              </a>\r\n              <button className={s.button} id={contact.id} onClick={onDelete}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import s from \"./Filter.module.css\";\r\n\r\nfunction Find({ value, onSearch }) {\r\n  return (\r\n    <div className={s.container}>\r\n      <p className={s.title}>Find contacts by name:</p>\r\n      <input type=\"text\" value={value} onChange={onSearch} className={s.imput}></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Find;\r\n","import React, { useState } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage.js\";\nimport ContactForm from \"./Components/ContactForm/ContactForm.jsx\";\nimport ContactList from \"./Components/ContactList/ContactList.jsx\";\nimport Filter from \"./Components/Filter/Filter.jsx\";\nimport s from \"./App.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst App = () => {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", \"\");\n  const [filter, setfilter] = useState(\"\");\n\n  const lowerFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter((contact) => contact.name.toLowerCase().includes(lowerFilter));\n\n  const onFind = (e) => setfilter(e.target.value);\n  const formSubmitHandler = (data) => setContacts([...contacts, { id: uuidv4(), ...data }]);\n  const onDelete = (id) => setContacts((contacts) => contacts.filter((contact) => contact.id !== id.target.id));\n\n  return (\n    <div>\n      <h1 className={s.titleH1}>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} listArrey={contacts} />\n      <h2 className={s.titleH2}>Contacts</h2>\n      <Filter value={filter} onSearch={onFind} />\n      <ContactList contacts={filteredContacts} onDelete={onDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3M7Rt\",\"name\":\"ContactForm_name__2G0ti\",\"imputAndButton\":\"ContactForm_imputAndButton__23kV3\",\"imput\":\"ContactForm_imput__3oyvL\",\"button\":\"ContactForm_button__1ASbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__1Pv1z\",\"button\":\"ContactList_button__Ta0b0\",\"name\":\"ContactList_name__1V09n\",\"number\":\"ContactList_number__pcGeQ\",\"li\":\"ContactList_li__DTzzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imput\":\"Filter_imput__28Dn9\",\"container\":\"Filter_container__kv5gB\",\"title\":\"Filter_title__3y0Qz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleH1\":\"App_titleH1__2pzMR\",\"titleH2\":\"App_titleH2__33-08\"};"],"sourceRoot":""}